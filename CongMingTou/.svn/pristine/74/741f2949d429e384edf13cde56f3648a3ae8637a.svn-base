//
//  CMT_AccountAndPasswordViewController.m
//  CongMingTou
//
//  Created by wzh on 16/5/16.
//  Copyright © 2016年 QiYuan. All rights reserved.
//

#import "CMT_AccountAndPasswordViewController.h"
#import "CMT_AccountAndPasswordTableViewCell.h"
#import "CMT_InvestPreViewController.h"
#import "CMT_RealNameAuthenticationViewController.h"
#import "CMT_ModifyPaymentPasswordViewController.h"
#import "CMT_NoSetGesturesSwitchTool.h"
//手势密码tag
#define CMT_GesturesPwdWithTag 100
// 指纹支付tag
#define CMT_FingerprintPayWithTag 200
#define CellHeight 45
#define GroupMid  10
@interface CMT_AccountAndPasswordViewController ()<UITableViewDelegate, UITableViewDataSource>
@property (strong, nonatomic) IBOutlet UITableView *tableView;
@property (nonatomic, strong) NSArray *titleArray;
@property (strong, nonatomic) CMT_IDCardInforDataModel *model;
@property (strong, nonatomic) IBOutlet NSLayoutConstraint *tableViewH;

@end

@implementation CMT_AccountAndPasswordViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    [self setDefaultUI];
    if([[CMT_AccountTool accountModel].realNameState isEqualToString:@"1"]){
        [self loadDataIDCardInforWithUserId:[CMT_AccountTool accountModel].userId];
    }
}


- (void)setDefaultUI{
    _titleArray = @[@[@"实名认证",@"我的邀请码"],@[@"修改支付密码",@"手势密码",@"修改手势密码"],@[@"指纹支付"]];
    _tableView.separatorColor = [UIColor clearColor];
    _tableView.rowHeight = CellHeight;
    _tableView.sectionFooterHeight = 0;
    _tableView.sectionHeaderHeight = GroupMid;
    _tableView.backgroundColor = [UIColor clearColor];
    _tableView.tableHeaderView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, _tableView.bounds.size.width, 10)];
    
}
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return _titleArray.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return [_titleArray[section] count];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    CMT_AccountAndPasswordTableViewCell *cell = [CMT_AccountAndPasswordTableViewCell cellWithTablebView:tableView andIndexPath:indexPath];
    cell.bottomLineView.hidden = indexPath.row == [_titleArray[indexPath.section] count] - 1 ? YES : NO;
    cell.titleLab.text = [NSString stringWithFormat:@"%@",_titleArray[indexPath.section][indexPath.row]];
    [cell.mySwitch addTarget:self action:@selector(mySwitchChange:andEvent:) forControlEvents:UIControlEventValueChanged];
    if(indexPath.section == 1 && indexPath.row == 1){//手势密码开关
        cell.mySwitch.tag = CMT_GesturesPwdWithTag;
        if([CMT_GesturesPasswordTool gesturesPwdModel]){//设置过手势密码
            [cell.mySwitch setOn:[CMT_GesturesPasswordTool gesturesPwdModel].openState];
        }else{
            if([CMT_NoSetGesturesSwitchTool noSetGesturesSwitchModel]){
                [cell.mySwitch setOn:[CMT_NoSetGesturesSwitchTool noSetGesturesSwitchModel].noSetOpenState];
            }
        }
    }else if(indexPath.section == 2 && indexPath.row == 0){//指纹支付开关
        cell.mySwitch.tag = CMT_FingerprintPayWithTag;
        [cell.mySwitch setOn:[CMT_FingerprintManagerTool fingerprintManagerModel].fingerprintOpenState];

    }
    [cell.nextBtn addTarget:self action:@selector(nextBtnClicked:andEvent:) forControlEvents:UIControlEventTouchUpInside];
    if(indexPath.section == 0){
        if(indexPath.row  == 0 ){
            NSString *reaName = @"";
            if(_model){
                reaName = _model.accountName;
            }else{
                reaName = [CMT_AccountTool accountModel].realName;
            }
            cell.desLab.font = UIFont24;
            cell.desLab.text = [[CMT_AccountTool accountModel].realNameState isEqualToString:@"0"] ? @"去认证":[NSString stringWithFormat:@"%@",reaName];
        }else if (indexPath.row == 1){
            cell.desLab.font = UIFontName24;
            cell.desLab.text = [NSString stringWithFormat:@"%@",[CMT_AccountTool accountModel].inviteCode];
        }
    }
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    
    UIViewController *vc = nil;
    if(indexPath.section == 0){
        if(indexPath.row == 0){//实名认证
            if([[CMT_AccountTool accountModel].realNameState isEqualToString:@"0"]){
                CMT_InvestPreViewController *investPreViewVC = [[CMT_InvestPreViewController alloc]init];
                investPreViewVC.enterInvestmentPreparationType = CMTEnterInvestmentPreparationTypeCertification;
                vc = investPreViewVC;
            }else{
                CMT_RealNameAuthenticationViewController *realNameAuthentication = [[CMT_RealNameAuthenticationViewController alloc]init];
                    vc =  realNameAuthentication;
            }
        }else if(indexPath.row == 1){//我的邀请码
            UIPasteboard *board = [UIPasteboard generalPasteboard];
            board.string = [NSString stringWithFormat:@"%@",[CMT_AccountTool accountModel].inviteCode];
            [self showHint:CMT_PasteboardInviteCodeSuccessful yOffset:-100];
        }
    }else if (indexPath.section == 1){
        if(indexPath.row == 0){//修改支付密码
            if([[CMT_AccountTool accountModel].realNameState isEqualToString:@"0"]){
                CMT_InvestPreViewController *investPreViewVC = [[CMT_InvestPreViewController alloc]init];
                investPreViewVC.enterInvestmentPreparationType = CMTEnterInvestmentPreparationTypeModifyPayPwd;
                vc = investPreViewVC;
            }else{
                CMT_ModifyPaymentPasswordViewController *modifyPaymentPasswordVC = [[CMT_ModifyPaymentPasswordViewController alloc]init];
                modifyPaymentPasswordVC.modifyPaymentPasswordType = CMTModifyPaymentPasswordTypeVerifyPassword;
                modifyPaymentPasswordVC.setPwdType = CMTSetPwdTypeRetsetPayPwd;
                vc = modifyPaymentPasswordVC;

            }
        }else if(indexPath.row == 1){//手势密码开关
            
        }else if (indexPath.row == 2){//修改手势密码
            
            if([CMT_GesturesPasswordTool gesturesPwdModel]){
                CMT_ViewController *viewControlle = [[CMT_ViewController alloc]init];
                viewControlle.type = GestureViewControllerTypeReset;
                CMT_NavigationController *nav = [[CMT_NavigationController alloc]initWithRootViewController:viewControlle];
                if([CMT_GesturesPasswordTool gesturesPwdModel].openState == 1){
                    [self presentViewController:nav animated:YES completion:nil];
                }else{
                    [self showHint:CMT_Error_OpenGesturesSwitch];
                }
            }else{
                if([CMT_NoSetGesturesSwitchTool noSetGesturesSwitchModel]){
                    CMT_ViewController *viewControlle = [[CMT_ViewController alloc]init];
                    viewControlle.type = GestureViewControllerTypeSetting;
                    CMT_NavigationController *nav = [[CMT_NavigationController alloc]initWithRootViewController:viewControlle];
                    if([CMT_NoSetGesturesSwitchTool noSetGesturesSwitchModel].noSetOpenState == 1){
                        [self presentViewController:nav animated:YES completion:nil];
                    }else{
                        [self showHint:CMT_Error_OpenGesturesSwitch];
                    }
                }
            }
           
        }
    }else if (indexPath.section == 2){
        if(indexPath.row == 0){//指纹支付
            
        }
    }
    vc.title = _titleArray[indexPath.section][indexPath.row];
    if(vc){
        [self.navigationController pushViewController:vc animated:YES];
    }
}
#pragma mark -- 箭头点击事件
- (void)nextBtnClicked:(UIButton *)button andEvent:(UIEvent *)event{
    NSSet *touches = [event allTouches];
    UITouch *touch = [touches anyObject];
    // 获取点击在tableView上的位置
    CGPoint currentTouchPosition = [touch locationInView:_tableView];
    NSIndexPath *indexPath = [_tableView indexPathForRowAtPoint: currentTouchPosition];
    [self tableView:_tableView didSelectRowAtIndexPath:indexPath];
    
}
- (void)mySwitchChange:(UISwitch *)mySwitch andEvent:(UIEvent *)event{

    BOOL isButtonOn = [mySwitch isOn];
    if(mySwitch.tag == CMT_GesturesPwdWithTag){//手势密码开关
        if([CMT_GesturesPasswordTool gesturesPwdModel]){//设置过手势密码
            CMT_GesturesPwdModel *model = [CMT_GesturesPasswordTool gesturesPwdModel];
            model.openState = isButtonOn;
            [CMT_GesturesPasswordTool save:model];
        }else{//没设置过
            if([CMT_NoSetGesturesSwitchTool noSetGesturesSwitchModel]){
                CMT_NoSetGesturesSwitchModel *model = [CMT_NoSetGesturesSwitchTool noSetGesturesSwitchModel];
                model.noSetOpenState = isButtonOn;
                [CMT_NoSetGesturesSwitchTool save:model];
            }
        }
    }else if(mySwitch.tag == CMT_FingerprintPayWithTag){//指纹支付开关

        
        [CMT_FingerprintManagerTool  fingerprintValidationWithTitle:@"请输入指纹验证是否可以指纹验证" Block:^(BOOL success, NSError *error, NSError *deviceError) {
            [[NSOperationQueue mainQueue] addOperationWithBlock:^{
                //用户选择输入密码，切换主线程处理
                if(!success){//没有验证成功
                    [mySwitch setOn:!mySwitch.isOn];
                }
                CMT_FingerprintManagerModel *fingerprintModel = [CMT_FingerprintManagerTool fingerprintManagerModel];
                fingerprintModel.fingerprintOpenState = mySwitch.isOn;
                [CMT_FingerprintManagerTool save:fingerprintModel];
                
                if(success == YES && !error && !deviceError){//验证成功
                    CMT_Log(@"可以开启");
                    [self showHint:CMT_FingerprintValidationSuccessful];
                }else if (success == NO && error){//指纹验证失败，请重新验证
                    if(error.code == LAErrorSystemCancel || error.code == LAErrorUserCancel ||error.code == LAErrorUserFallback){
                        [self showHint:CMT_FingerprintValidationCancel];
                    }else{
                        [self showHint:CMT_Error_FingerprintValidation];
                    }
                }else{
                    
                    if(deviceError.code == LAErrorTouchIDNotEnrolled){////设备Touch ID不可用，用户未录入
                        [self showHint:CMT_Error_DeviceErrorNOOpenOrNoLogin];
                    }else if (deviceError.code == LAErrorTouchIDNotAvailable){ //设备Touch ID不可用，例如未打开
                        [self showHint:CMT_Error_DeviceErrorNOOpenOrNoLogin];
                    }else if (deviceError.code == LAErrorPasscodeNotSet){//系统未设置密码
                        [self showHint:CMT_Error_DeviceErrorNOSetFingerprint];
                    }else if (deviceError.code == LAErrorAuthenticationFailed){//授权失败
                        [self showHint:CMT_Error_DeviceErrorFingerprintValidation];
                    }else{
                        [self showHint:CMT_Error_DeviceErrorFingerprintValidation];//设备不支持
                    }
                }
            }];
            
        }];
    }
   
}

#pragma mark -- 网络请求
- (void)loadDataIDCardInforWithUserId:(NSString *)userId{
    [self showHudInView:self.view hint:CMT_LoadDataWaiting];
    [CMT_ProcessTheDataTool getIDCardInforWithUserId:userId andBlock:^(CMT_IDCardInforModel *model, NSError *error) {
        [self hideHud];
        if(!error){
            if([[NSString stringWithFormat:@"%@",model.code] isEqualToString:@"1"]){
                _model = model.dataModel;
                [_tableView reloadData];
            }else if ([[NSString stringWithFormat:@"%@",model.code] isEqualToString:CMT_SinglePointCode]){
                [CMT_SinglePointLoginTool addSinglePointLoginWithSelfVC:self];
            }else{
                [self showHint:model.message];
            }
        }else{
            [self showHint:CMT_Error_NotNetWork];
        }
    }];
}
- (void)viewDidLayoutSubviews{
    [super viewDidLayoutSubviews];
    if(CMT_6pAnd6ps){
        _tableView.rowHeight = CellHeight *CMT_ProportionX;
        _tableView.sectionHeaderHeight = GroupMid *CMT_ProportionX;
        _tableViewH.constant = 300 *CMT_ProportionX;
    }
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
