//
//  CMT_InputView.m
//  InputView
//
//  Created by wzh on 16/5/13.
//  Copyright © 2016年 wzh. All rights reserved.
//

#import "CMT_InputView.h"
#import "UIView+Extension.h"
#define Tag 10000
#define LineTag 20000
#define NoAdd 0
#define ZHPasswordLength  CMT_PayPwdLenght

//内部输入框的frame

#define TopAndBelowMid 0
#define LeftAndRightMid 0
#define ItemView_X LeftAndRightMid
#define ItemView_Y TopAndBelowMid
#define ItemView_W (self.frame.size.width - LeftAndRightMid * 2 - ZHPasswordLength *(Mid-1)) / ZHPasswordLength
#define ItemView_H self.frame.size.height - TopAndBelowMid * 2
//#define LlineW 1

@interface CMT_InputView ()


@property (nonatomic, strong) NSMutableArray *itemViewArray;

@end

@implementation CMT_InputView

- (instancetype)initWithFrame:(CGRect)frame{
    if(self = [super initWithFrame:frame]){
        [self setUI];
        
    }
    return self;
}
- (id)initWithCoder:(NSCoder *)decoder
{
    if (self = [super initWithCoder:decoder]) {
        
        [self setUI];
    }
    return self;
}
- (instancetype)init{
    if(self = [super init]){
        
    }
    return self;
}
- (void)setFrame:(CGRect)frame{
    [super setFrame:frame];
}

- (NSMutableArray *)itemViewArray{
    if(!_itemViewArray){
        _itemViewArray = [NSMutableArray array];
    }
    return _itemViewArray;
}

- (void)setHidden:(BOOL)hidden{
    [super setHidden:hidden];
    if(hidden){
        [self.topTextField resignFirstResponder];
    }else{
        [self.topTextField becomeFirstResponder];
    }
}

- (UITextField *)topTextField{
    if(!_topTextField){
        _topTextField = [[UITextField alloc] initWithFrame:CGRectMake(0, 0, self.frame.size.width, self.frame.size.height)];
        _topTextField.hidden = YES;
        _topTextField.keyboardType = UIKeyboardTypeNumberPad;
        [_topTextField addTarget:self action:@selector(txchange:) forControlEvents:UIControlEventEditingChanged];
        [self addSubview:_topTextField];
    }
    return _topTextField;
}


- (void)setUI{
    
    _midLineColor = [UIColor blackColor];
//    _inputItemBackColor = [UIColor whiteColor];
    _midLineBorderWidth = 1;
    _pointRadius = 10;
    _pointColor = [UIColor blackColor];
    _inputViewType = CMTInputViewTypeHiddenPassWord;

    [self addSubview:self.topTextField];

    for (int i = 0; i < ZHPasswordLength; i++){
        UIView *itemView = [[UIView alloc]init];
        itemView.backgroundColor = [UIColor clearColor];
        [self addSubview:itemView];
        
        UILabel *pointLab = [[UILabel alloc]init];
        pointLab.tag  = Tag + i;
        pointLab.hidden = YES;
        pointLab.layer.masksToBounds = YES;
        [itemView addSubview:pointLab];
        [self.itemViewArray addObject:itemView];

        if(i != NoAdd){
            UIView *lineView = [[UIView alloc]init];
            lineView.tag = LineTag +i;
            [itemView addSubview:lineView];
        }
    }
}

- (void)setupSubViewTextFildWithFrame{
    CGFloat itemView_X = 0;
    CGFloat  Mid  = _midLineBorderWidth;

    int i = 0;
    for (UIView *itemView  in self.itemViewArray) {
        itemView_X = LeftAndRightMid + i * Mid + i * (ItemView_W - 1);
        itemView.frame = CGRectMake(itemView_X, ItemView_Y, ItemView_W, ItemView_H);
        
        UILabel *pointLab = (UILabel *)[itemView viewWithTag:Tag +i];
        pointLab.size = CGSizeMake(self.pointRadius, self.pointRadius);
        pointLab.center = CGPointMake(itemView.width / 2, itemView.height / 2);
        pointLab.backgroundColor = self.pointColor;
        pointLab.layer.cornerRadius = pointLab.width / 2;
        if(_inputViewType == CMTInputViewTypeHiddenPassWord){
            pointLab.textColor = [UIColor clearColor];
        }else if(_inputViewType == CMTInputViewTypeShowPassWord){
            pointLab.textColor = _pointTextColor;
        }
        
        UIView *lineView = nil;
        if(i != NoAdd){
            lineView = (UIView *)[itemView viewWithTag:LineTag +i];
            lineView.frame = CGRectMake(-_midLineBorderWidth, 0, _midLineBorderWidth, ItemView_H);
            lineView.backgroundColor = _midLineColor;
        }

        i++;
    }
}
- (void)layoutSubviews{
    [super layoutSubviews];
    
    [self setupSubViewTextFildWithFrame];
}
#pragma mark 文本框内容改变
- (void)txchange:(UITextField *)tx
{
    NSString *password = tx.text;
    CMT_Log(@"password = %@",password);;
    if (password.length == self.itemViewArray.count){
        [tx resignFirstResponder];//隐藏键盘
    }
    int i = 0;
    for (UIView *itemView  in self.itemViewArray) {
        UILabel *pointLab = (UILabel *)[itemView viewWithTag:Tag +i];
        if (i < password.length){
            pointLab.hidden = NO;
            NSString *pwd = [password substringWithRange:NSMakeRange(i, 1)];
            CMT_Log(@"pwd =%@",pwd);
            pointLab.text = pwd;
        }else{
            pointLab.hidden = YES;
        }
        i ++;
    }
    if([self.delegate respondsToSelector:@selector(changeValueWithTopTextField:)]){
        [self.delegate performSelector:@selector(changeValueWithTopTextField:) withObject:_topTextField];
    }
        CMT_Log(@"%@",password);
    if (password.length == ZHPasswordLength){
        if([self.delegate respondsToSelector:@selector(didCompleteInput:andInputView:)]){
            [self.delegate performSelector:@selector(didCompleteInput:andInputView:) withObject:password withObject:self];
        }//外面响应代理
    }
    
    if(password.length > ZHPasswordLength){
//        if([self.delegate respondsToSelector:@selector(beyondTheLengthWithiInputTextField:andInputView::)]){
//            [self.delegate performSelector:@selector(beyondTheLengthWithInputView) withObject:self];
//        }//外面响应代理
    }
}

- (void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event{
    [_topTextField becomeFirstResponder];
}

- (void)emptyDataWithTopTextField{
    
}
@end
