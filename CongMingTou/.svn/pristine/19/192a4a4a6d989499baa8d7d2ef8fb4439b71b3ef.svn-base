//
//  CMT_FoudViewController.m
//  CongMingTou
//
//  Created by wzh on 16/5/10.
//  Copyright © 2016年 QiYuan All rights reserved.
//

#import "CMT_FoundViewController.h"
#import <JavaScriptCore/JavaScriptCore.h>
#import "CMT_FriendsShareViewController.h"
#import "CMT_LoginViewController.h"
#import "CMT_MyWelfareViewController.h"

@interface CMT_FoundViewController ()<UIWebViewDelegate,UMSocialUIDelegate>
@property (nonatomic, strong) UIWebView *foundWebView;
@property (nonatomic, strong) NSArray *markArray;
@end

@implementation CMT_FoundViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    [CMT_Tools removeWebCacheAndCookis];
}

- (void)createFoundWebViewUI{
    
    [_foundWebView removeFromSuperview];
    _foundWebView = nil;
    _foundWebView = [[UIWebView alloc]initWithFrame:CGRectMake(0, 0, CMT_ScreenWidth, CMT_ScreenHeight - CMT_NAV_Height)];
    _foundWebView.scrollView.contentInset = UIEdgeInsetsMake(0, 0, CMT_TAB_Height, 0);
    _foundWebView.delegate = self;
    _foundWebView.hidden = YES;
    _foundWebView.backgroundColor = [UIColor clearColor];
    _foundWebView.scrollView.backgroundColor = [UIColor clearColor];
    [self.view addSubview:_foundWebView];
    
    NSString *urlStr = [NSString stringWithFormat:@"%@%@",CMT_H5SERVEr_URL,CMT_H5FountVC];
    NSMutableURLRequest *request =[NSMutableURLRequest requestWithURL:[NSURL URLWithString:urlStr]];
    request.cachePolicy = NSURLRequestReloadIgnoringCacheData;
    [_foundWebView loadRequest:request];
}
- (void)back{
    
    [_foundWebView goBack];
}
#pragma mark --重新加载url
- (void)webViewAgainLoadUrl{
    [self createFoundWebViewUI];
}
- (void)webViewDidFinishLoad:(UIWebView *)webView{
    
    [self hiddenOrShowUIDidFinishOrFailLoadState:1];
    [self hideHud];
    
    NSString *navtitle = [webView stringByEvaluatingJavaScriptFromString:@"document.title"];
    if (navtitle) {
        self.navigationItem.title  = navtitle;
    }
    JSContext *context=[webView valueForKeyPath:@"documentView.webView.mainFrame.javaScriptContext"];
    
    //跳转到好友邀请
    context[@"jumpApp"] = ^() {
        dispatch_async(dispatch_get_main_queue(), ^{
            if([CMT_AccountTool accountModel]){
                CMT_FriendsShareViewController *firendShareVC = [[CMT_FriendsShareViewController alloc]init];
                firendShareVC.title = @"邀请好友";
                [self.navigationController pushViewController:firendShareVC animated:YES];
            }else{
                CMT_LoginViewController *loginVc = [[CMT_LoginViewController alloc]init];
                loginVc.enterLoginType = CMTEnterLoginTypeFoundShare;
                CMT_NavigationController *loginNav = [[CMT_NavigationController alloc]initWithRootViewController:loginVc];
                [self presentViewController:loginNav animated:YES completion:nil];
            }
        });
    };
    
    //强制登录事件--后台主动调用
    context[@"jumpToLogin"] = ^() {
        dispatch_async(dispatch_get_main_queue(), ^{
            
            if([CMT_AccountTool accountModel]){

            CMT_LoginViewController *loginVc = [[CMT_LoginViewController alloc]init];
            loginVc.enterLoginType = CMTEnterLoginTypeDefaut;
            CMT_NavigationController *loginNav = [[CMT_NavigationController alloc]initWithRootViewController:loginVc];
                [self presentViewController:loginNav animated:YES completion:nil];
            }
        });
    };

    
//    页面传值
//    __block JSContext *_blcokContext = context;
//    context[@"jumpToLogin"] = ^() {
//        dispatch_async(dispatch_get_main_queue(), ^{
////            if([CMT_AccountTool accountModel]){
//                NSString *jsFunctStr = [NSString stringWithFormat:@"showInfoConfirm('%@')",[CMT_AccountTool accountModel].userId];
//                [_blcokContext evaluateScript:jsFunctStr];
//            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:nil delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
//            [alert show];
//            }else{
//                CMT_LoginViewController *loginVc = [[CMT_LoginViewController alloc]init];
//                loginVc.enterLoginType = CMTEnterLoginTypeDefaut;
//                CMT_NavigationController *loginNav = [[CMT_NavigationController alloc]initWithRootViewController:loginVc];
//                [self presentViewController:loginNav animated:YES completion:nil];
//            }
//        });
//    };
    /*
    //跳转到首页的方法
    context[@"jumpToHomePage"] = ^() {
//        dispatch_async(dispatch_get_main_queue(), ^{
            if([CMT_AccountTool accountModel]){
                CMT_RootVC.selectedIndex = 0;
            }else{
                CMT_LoginViewController *loginVc = [[CMT_LoginViewController alloc]init];
                loginVc.enterLoginType = CMTEnterLoginTypeDefaut;
                CMT_NavigationController *loginNav = [[CMT_NavigationController alloc]initWithRootViewController:loginVc];
                [self presentViewController:loginNav animated:YES completion:nil];
            }
//        });
    };

    //跳转到我的福利的方法
    context[@"jumpToMyWelfare"] = ^() {
//        dispatch_async(dispatch_get_main_queue(), ^{
            if([CMT_AccountTool accountModel]){
                CMT_MyWelfareViewController *myWelfareVC = [[CMT_MyWelfareViewController alloc]init];
                myWelfareVC.enterMyWelfareType = CMTEnterMyWelfareTypeBrowseAllList;
                [self.navigationController pushViewController: myWelfareVC animated:YES];
            }else{
                CMT_LoginViewController *loginVc = [[CMT_LoginViewController alloc]init];
                loginVc.enterLoginType = CMTEnterLoginTypeDefaut;
                CMT_NavigationController *loginNav = [[CMT_NavigationController alloc]initWithRootViewController:loginVc];
                [self presentViewController:loginNav animated:YES completion:nil];
            }
//        });
    };
    */
    if(webView.canGoBack){
        self.navigationItem.leftBarButtonItem = [UIBarButtonItem itemWithImageName:@"NavBarBack" target:self action:@selector(back)];
    }else{
        self.navigationItem.leftBarButtonItem = nil;
    }
}
- (void)webViewDidStartLoad:(UIWebView *)webView{
    
    [self showHudInView:self.view hint:CMT_LoadDataWaiting];
}
-(void)webView:(UIWebView *)webView didFailLoadWithError:(NSError *)error{
    [self hiddenOrShowUIDidFinishOrFailLoadState:0];
    [self hideHud];
    [self showHint:CMT_Error_NotNetWork];
}

- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType{
    
    [CMT_Tools cookiesSendValueParame:request.URL];//设定cookies传参

    //根据页面url标识判断是否显示分享按钮
    NSArray *tempArray = [CMT_Tools parsingUrl:request.URL.query];
    _markArray = tempArray;
    if ([CMT_Tools isAddWithParsingUrl:request.URL.query]) {
        self.navigationItem.rightBarButtonItem = [UIBarButtonItem itemWithTitle:@"分享" target:self action:@selector(rightShareBtnClicked:)];
    }else{
        self.navigationItem.rightBarButtonItem = nil;
    }
    return YES;
}
#pragma mark --- 重写父类方法 0 失败 1 成功
- (void)hiddenOrShowUIDidFinishOrFailLoadState:(int)finishOrFailLoadState{
    if(finishOrFailLoadState == 0){
        self.noNetWorkbtn.hidden = NO;
    }else{
        self.noNetWorkbtn.hidden = YES;
    }
    _foundWebView.hidden = !self.noNetWorkbtn.hidden;
}
- (void)noNetWorkbtnClicked:(UIButton *)button{
    [self createFoundWebViewUI];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)rightShareBtnClicked:(UIButton *)button{
    NSString *userId = @"";
    if([CMT_AccountTool accountModel]){
        userId = [CMT_AccountTool accountModel].userId;
    }else{
        userId = @"0";
    }
    [self getActivityShareContentWithActivityId:[_markArray lastObject] userId:userId];
}

- (void)getActivityShareContentWithActivityId:(NSString *)activity userId:(NSString *)userId{
    [self showHudInView:self.view hint:CMT_LoadDataWaiting];
    [CMT_ProcessTheDataTool getActivityShareContentWithActivityId:activity userId:userId andBlock:^(CMT_ActivityShareContentModel *model, NSError *error) {
        [self hideHud];
        if(!error){
            if([[NSString stringWithFormat:@"%@",model.status] isEqualToString:@"1"]){
                
                if ([model.forceLogin isEqualToString:@"0"]) {
                     [self setShareContentWithModel:model];
                }if ([model.forceLogin isEqualToString:@"1"]) {
                    CMT_LoginViewController *loginVc = [[CMT_LoginViewController alloc]init];
                    loginVc.enterLoginType = CMTEnterLoginTypeDefaut;
                    CMT_NavigationController *loginNav = [[CMT_NavigationController alloc]initWithRootViewController:loginVc];
                    [self presentViewController:loginNav animated:YES completion:nil];
                }else{
                    return ;
                }
               
            }else if ([[NSString stringWithFormat:@"%@",model.status] isEqualToString:CMT_SinglePointCode]){
                [CMT_SinglePointLoginTool addSinglePointLoginWithSelfVC:self];
            }else{
                [self showHint:model.msg];
            }
        }else{
            [self showHint:CMT_Error_NotNetWork];
        }
    }];
}
//
#pragma mark - -设置分享
- (void)setShareContentWithModel:(CMT_ActivityShareContentModel *)model{
    __block UIImage *iconImage = nil;
    [[SDWebImageManager sharedManager] downloadImageWithURL:[NSURL URLWithString:model.imgUrl] options:0 progress:^(NSInteger receivedSize, NSInteger expectedSize){
        //处理下载进度
    } completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, BOOL finished, NSURL *imageURL) {
        if (error) {//加载失败
            iconImage = [UIImage imageNamed:@"default_image"];
        }else{
            iconImage = image;
        }
        // 分享到微信朋友圈
        [CMT_ShareTool wechatTimelineWithTitle:model.title url:model.linkUrl shareText:model.shareInfo shareImage:iconImage];
        // 分享到微信好友
        [CMT_ShareTool wechatSessionWithTitle:model.title url:model.linkUrl shareText:model.shareInfo shareImage:iconImage];
        //qq好友
        [CMT_ShareTool qqWithTitle:model.title url:model.linkUrl shareText:model.shareInfo shareImage:iconImage ];
        //qq空间
        [CMT_ShareTool qqQzoneWithTitle:model.title url:model.linkUrl shareText:model.shareInfo shareImage:iconImage];
        [UMSocialSnsService presentSnsIconSheetView:self
                                             appKey:CMT_UmengAppkey
                                          shareText:model.shareInfo
                                         shareImage:iconImage
                                    shareToSnsNames:[NSArray arrayWithObjects:UMShareToWechatTimeline,UMShareToWechatSession,UMShareToQQ,UMShareToQzone,nil]
                                           delegate:self];
        
    }];
}

-(void)didSelectSocialPlatform:(NSString *)platformName withSocialData:(UMSocialData *)socialData{
    MySetObjectForKey([NSNumber numberWithInt:1], CMT_Share_key);
}

@end
